image: node:18

.only-main: &only-main
  tags:
    - docker
  only:
    - main
    - merge_requests
    - tags
    - release/*

.docker-job: &docker-job
  tags:
    - docker
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.npm-job: &npm-job
  before_script:
    - export NODE_OPTIONS="--max-old-space-size=8192"
    - npm ci --cache .npm --prefer-offline

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/

stages:
  - check
  - build

prettier:
  stage: check
  <<: *npm-job
  script:
    - npm run check

eslint:
  stage: check
  <<: *npm-job
  script:
    - node_modules/eslint/bin/eslint.js web/

build-nuxt:
  stage: build
  <<: *npm-job
  script:
    - cd web
    - npm run build

build-image-main:
  stage: build
  <<: *only-main
  <<: *docker-job
  only:
    - main
  script:
    - docker build --pull -f web.Dockerfile -t "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE/web:latest" .
    - docker push -a "$CI_REGISTRY_IMAGE/web"
    - docker build --pull -f queue-worker.Dockerfile -t "$CI_REGISTRY_IMAGE/worker/demo:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE/worker/demo:latest" .
    - docker push -a "$CI_REGISTRY_IMAGE/worker/demo"

build-image:
  stage: build
  <<: *only-main
  <<: *docker-job
  only:
    - release/*
    - tags
  script:
    - docker build --pull -f web.Dockerfile -t "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_SHORT_SHA" .
    - docker push -a "$CI_REGISTRY_IMAGE/web"
    - docker build --pull -f queue-worker.Dockerfile -t "$CI_REGISTRY_IMAGE/worker/demo:$CI_COMMIT_SHORT_SHA" .
    - docker push -a "$CI_REGISTRY_IMAGE/worker/demo"
